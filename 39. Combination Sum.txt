class Solution:
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        self.res = []
	if len(candidates) <= 0: return self.res

	candidates.sort()
	self.dfs(candidates, [], target, 0)

	return self.res

    def dfs(self, candidates, sublist, target, last):
	if target == 0:
	    self.res.append(sublist)
	if target < candidates[0]:
	    return
	for num in candidates:
	    if num < last:
		continue
	    if num > target:
		return
	    self.dfs(candidates, sublist+[num], target-num, num)